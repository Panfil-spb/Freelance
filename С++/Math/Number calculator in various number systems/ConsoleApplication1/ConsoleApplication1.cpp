#include <string>
#include <iostream>
#include <locale>
#include <cmath>

using namespace std;
// функция ковертирования
// num строка с числом
// ss1 ss2 числа систем счисления
string convert(string num, int ss1, int ss2)
{
    // если сс одинаковы то сразу возвращаем наше число
    if (ss1 == ss2) return num;
    // запоминаем длину строки числа
    int len = num.length();
    // объявляем новое число
    // а - остаток от деления
    int new_num = 0, a;
    // массив символов из одного элемента
    char n[1] = { ' ' };
    // символ 
    char c;
    // строка для нового числа
    string New = " ";
    // проходимся по символьно по строке числа перебирая каждую цифру
    for (int i = len - 1; i >= 0; i--)
    {
        // запоминаем цифру порядка
        c = num[len - i - 1];
        // если это цифра
        if (c >= '0' && c <= '9')
        {
            // то отнимая от символа цифры символ "0" получаем число типа int
            // для этого маневра используется таблица ASCII
            // после умножаем полученное число на основание возведенное в степень порядка
            new_num += int(c - '0') * int(pow(double(ss1), i));
        }
        // если это буквы
        else
        {
            // отнимаем от символа букву "А" и прибавляем 10 чтобы получить числа от 10 до 15
            // для этого маневра используется таблица ASCII
            // после умножаем полученное число на основание возведенное в степень порядка
            new_num += int(c - 'A' + 10)  * int(pow(double(ss1), i));
        }
    }

    // запускаем бесконечный цикл
    while (1)
    {
        // запоминаем остатток от деления
        a = new_num % ss2;
        // если он от 0 до 9 то
        if (a >= 0 && a <= 9)
        {
            // превращаем числа в символ цифры
            n[0] = char(a + '0');
            // записываем полученный символ в начало слова
            New = string(n, sizeof(n)) + New;
        }
        // иначе
        else
        {
            // прибавляем к числу символ "А" и отнимаем 10 так по таблице ASCII и получим соответствующий символ для чисел в 16-ой сс
            n[0] = char(a + 'A' - 10);
            // записываем полученный символ в начало слова
            New = string(n, sizeof(n)) + New;
        }
        // если число не делится нацело то завершаем цикл
        if (new_num / ss2 == 0)
        {
            break;
        }
        // иначе наше число делим на размер новой системы счисления
        else
        {
            new_num /= ss2;
        }
    }
    // возвращаем строку с полученным числом
    return New;
}

// функция вывода главного меню
void menu()
{
    // очищаем экран
    system("cls");
    // выводим главное меню в консоль
    cout << "1. Конвертация чисел" << endl;
    cout << "2. Сложение чисел" << endl;
    cout << "3. Деление чисел" << endl;
    cout << "0. Выход" << endl;
    cout << endl << "Ваш выбор: ";
}

// функция меню выбора системы счисления
void ss_menu()
{
    cout << "1. 10-ая система счисления" << endl;
    cout << "2. 8-ая система счисления" << endl;
    cout << "3. 2-ая система счисления" << endl;
    cout << "4. 16-ая система счисления" << endl;
    cout << endl << "Ваш выбор: ";
}

// проверка числа на соответсвие к заявленой системе счисления
// num наше число в типе строки
// ss - заявленная система счисления
int check_num_convert(string num, int ss)
{
    // массив со всевозможными символами по порядку
    char mas[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
    // длина строки с числом
    int len = num.length();
    // переменная для отслеживания не совпадения
    int k;
    // с самого начала проходимся по строке
    for (int i = 0; i < len; i++)
    {
        // обнуляем переменную
        k = 0;
        // проходимся по массиву с самого начала до последнего числа в массиве согласно системе счисления
        for (int j = 0; j < ss; j++)
        {
            // если они совпадают то 
            if (num[i] == mas[j])
            {
                // изменяем переменую
                k = 1;
                // завершаем цикл
                break;
            }
        }
        // если переменная осталась == 0 то возвращаем 1 так как она не соответствует системе счисления
        if (k == 0) return 1;
    }
    // возвращаем 0 если все нормально
    return 0;
}

// выбор систему счисления
// s - сообщения для вывода в консоль
int ss_choise(string s)
{
    // делаем переменную выбора для захода в цикл
    char c = '0';
    // пока будет сделан выбор в диапазоне прогоняем цикл
    while (c > '4' || c < '1')
    {
        // очистка экрана
        system("cls");
        // вывод сообщения
        cout << s << endl;
        // вывод меню сс 
        ss_menu();
        // ввод выбора
        cin >> c;

        // смотрим варианты события
        switch (c)
        {
            // если 1 то возвращаем 10
        case '1':
            return 10;
            // если 2 то возвращаем 8
        case '2':
            return 8;
            // если 3 то возвращаем 2
        case '3':
            return 2;
            // если 4 то возвращаем 16
        case '4':
            return 16;
        default:
            break;
        }
    }
}

// функция сложения
// num1 - первое число
// num2 - второе число
// ss - система счисления
string sloj(string num1, string num2, int ss)
{
    // запоминаем длину первого числа
    int len = num1.length();
    // обнуляем новые числа 
    // а - переменная для остатка от деления
    int new_num1 = 0, new_num2 = 0, a;
    // массив из одного символа 
    char n[1] = { ' ' };
    // символ для запоминания
    char c;
    // новая строка
    string New = " ";
    // проходимся по строке
    for (int i = len - 1; i >= 0; i--)
    {
        // запоминаем символ
        c = num1[len - i - 1];
        // если это символ числа
        if (c >= '0' && c <= '9')
        {
            // прибавляем к новому числу конвертируемый символ умноженный на степень порядка сс
            new_num1 += int(c - '0') * int(pow(double(ss), i));
        }
        // если это символ буквы
        else
        {
            // прибавляем к новому числу конвертируемый символ умноженный на степень порядка сс
            new_num1 += int(c - 'A' + 10) * int(pow(double(ss), i));
        }
    }

    // запоминаем длину второгго числа
    len = num2.length();
    // проходимся по строке
    for (int i = len - 1; i >= 0; i--)
    {
        // запоминаем символ
        c = num2[len - i - 1];
        // если это символ числа
        if (c >= '0' && c <= '9')
        {
            // прибавляем к новому числу конвертируемый символ умноженный на степень порядка сс
            new_num2 += int(c - '0') * int(pow(double(ss), i));
        }
        // если это символ буквы
        else
        {
            // прибавляем к новому числу конвертируемый символ умноженный на степень порядка сс
            new_num2 += int(c - 'A' + 10) * int(pow(double(ss), i));
        }
    }

    // находим сумму двух чисел
    int new_num = new_num1 + new_num2;


    while (1)
    {
        // запоминаем остатток от деления
        a = new_num % ss;
        // если он от 0 до 9 то
        if (a >= 0 && a <= 9)
        {
            // превращаем числа в символ цифры
            n[0] = char(a + '0');
            // записываем полученный символ в начало слова
            New = string(n, sizeof(n)) + New;
        }
        // иначе
        else
        {
            // прибавляем к числу символ "А" и отнимаем 10 так по таблице ASCII и получим соответствующий символ для чисел в 16-ой сс
            n[0] = char(a + 'A' - 10);
            // записываем полученный символ в начало слова
            New = string(n, sizeof(n)) + New;
        }
        // если число не делится нацело то завершаем цикл
        if (new_num / ss == 0)
        {
            break;
        }
        // иначе наше число делим на размер новой системы счисления
        else
        {
            new_num /= ss;
        }
    }

    // возвращаем строку с новым числом
    return New;
}

// функция деления
string dellenie(string num1, string num2, int ss)
{
    // запоминаем длину первого числа
    int len = num1.length();
    // обнуляем новые числа 
    // а - переменная для остатка от деления
    int new_num1 = 0, new_num2 = 0, a;
    // массив из одного символа 
    char n[1] = { ' ' };
    // символ для запоминания
    char c;
    // новая строка
    string New = " ";
    // проходимся по строке
    for (int i = len - 1; i >= 0; i--)
    {
        // запоминаем символ
        c = num1[len - i - 1];
        // если это символ числа
        if (c >= '0' && c <= '9')
        {
            // прибавляем к новому числу конвертируемый символ умноженный на степень порядка сс
            new_num1 += int(c - '0') * int(pow(double(ss), i));
        }
        // если это символ буквы
        else
        {
            // прибавляем к новому числу конвертируемый символ умноженный на степень порядка сс
            new_num1 += int(c - 'A' + 10) * int(pow(double(ss), i));
        }
    }

    // запоминаем длину второгго числа
    len = num2.length();
    // проходимся по строке
    for (int i = len - 1; i >= 0; i--)
    {
        // запоминаем символ
        c = num2[len - i - 1];
        // если это символ числа
        if (c >= '0' && c <= '9')
        {
            // прибавляем к новому числу конвертируемый символ умноженный на степень порядка сс
            new_num2 += int(c - '0') * int(pow(double(ss), i));
        }
        // если это символ буквы
        else
        {
            // прибавляем к новому числу конвертируемый символ умноженный на степень порядка сс
            new_num2 += int(c - 'A' + 10) * int(pow(double(ss), i));
        }
    }

    // находим частное двух чисел
    int new_num = new_num1 / new_num2;


    while (1)
    {
        // запоминаем остатток от деления
        a = new_num % ss;
        // если он от 0 до 9 то
        if (a >= 0 && a <= 9)
        {
            // превращаем числа в символ цифры
            n[0] = char(a + '0');
            // записываем полученный символ в начало слова
            New = string(n, sizeof(n)) + New;
        }
        // иначе
        else
        {
            // прибавляем к числу символ "А" и отнимаем 10 так по таблице ASCII и получим соответствующий символ для чисел в 16-ой сс
            n[0] = char(a + 'A' - 10);
            // записываем полученный символ в начало слова
            New = string(n, sizeof(n)) + New;
        }
        // если число не делится нацело то завершаем цикл
        if (new_num / ss == 0)
        {
            break;
        }
        // иначе наше число делим на размер новой системы счисления
        else
        {
            new_num /= ss;
        }
    }

    // возвращаем строку с новым числом
    return New;
}

// главная функция
int main()
{
    // подключаем русский язык
    setlocale(0, "");

    // символ выбора
    char c = ' ';
    // объявляем переменные для сс
    int ss1, ss2;
    // строки для запоминания чисел
    string num_convert, num1, num2;
    // цикл будет идти до ввода "0"
    while (c != '0')
    {
        // вывод меню
        menu();
        // ввод выбора
        cin >> c;
        // обработчик событий
        switch (c)
        {
            // если было введена 1
        case '1':
            // ввод систем счисления
            ss1 = ss_choise("Выберите систему счисления для первого числа");
            ss2 = ss_choise("Выберите систему счисления для второго числа");

            // очистка экрана
            system("cls");
            // ввод числа для конвертации
            cout << "Введите число для конвертации: ";
            cin >> num_convert;
            
            // если число не прошло проверку то
            if (check_num_convert(num_convert, ss1))
            {
                // очищаем экран
                system("cls");
                // выводим сообщение об ошибке
                cout << "Было введено некорректное число!" << endl << endl;
                // вызываем паузу
                system("pause");
                // выходим из обработчика досрочно
                break;
            }
            // иначе
            else
            {
                // выводим на экран полученное число
                cout << convert(num_convert, ss1, ss2) << endl;
                // вызываем паузу
                system("pause");
            }
            break;
            // если было введена 2
        case '2':
            // выбираем систему счисления
            ss1 = ss_choise("Выберите систему счисления для сложения");
            // очищаем экран
            system("cls");
            // вводим первое число
            cout << "Введите первое число: ";
            cin >> num1;
            // если число некорректно
            if (check_num_convert(num1, ss1))
            {
                // очистк аэкрана
                system("cls");
                // вывод сообщения об ошибке
                cout << "Было введено некорректное число!" << endl << endl;
                // вызов паузы
                system("pause");
                break;
            }

            // ввод вторго числа 
            cout << "Введите второе число: ";
            cin >> num2;
            // если число некорректно
            if (check_num_convert(num2, ss1))
            {
                // очистка экрана
                system("cls");
                // вывод сообщения об ошибке
                cout << "Было введено некорректное число!" << endl << endl;
                // вызов паузы
                system("pause");
                break;
            }

            // очистка экрана
            system("cls");
            // вывод результата сложения
            cout << sloj(num1, num2, ss1) << endl;
            // вызов паузы
            system("pause");

            break;
            // если было введена 3
        case '3':
            // выбор системы счисления
            ss1 = ss_choise("Выберите систему счисления для деления");
            // очтска экрана
            system("cls");
            // ввод первого числа
            cout << "Введите первое число: ";
            cin >> num1;
            // если число некорректно
            if (check_num_convert(num1, ss1))
            {
                // очистка экрана
                system("cls");
                // вывод сообщения об ошибке
                cout << "Было введено некорректное число!" << endl << endl;
                // вызов паузы
                system("pause");
                break;
            }

            // ввод второго числа
            cout << "Введите второе число: ";
            cin >> num2;
            // если число было введено некорректно то
            if (check_num_convert(num2, ss1))
            {
                // очистка экрана
                system("cls");
                // вывод сообщения об ошибке
                cout << "Было введено некорректное число!" << endl << endl;
                // вызов паузы
                system("pause");
                break;
            }
            // очистка экрана
            system("cls");
            // вывод результата деления
            cout << dellenie(num1, num2, ss1) << endl;
            // вызов паузы
            system("pause");
            break;
            // если было введена 0
            // завершение работы программы
        case '0':
            break;
            // если было введено что то не из списка то 
        default:
            // вывод сообщения о не корректном выборе
            cout << "Такого пункта нет!" << endl;
            break;
        }
    }
    
}
